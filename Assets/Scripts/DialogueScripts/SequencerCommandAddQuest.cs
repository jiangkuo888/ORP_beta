



using UnityEngine;
using System.Collections;
using PixelCrushers.DialogueSystem;
using PixelCrushers.DialogueSystem.SequencerCommands;
using HutongGames.PlayMaker;

public class SequencerCommandAddQuest : SequencerCommand {





	public void Start() {


		// Add your initialization code here. You can use the GetParameter***() and GetSubject()
		// functions to get information from the command's parameters. You can also use the
		// Sequencer property to access the SequencerCamera, CameraAngle, and other properties
		// on the sequencer.

		if(GameObject.Find ("Missing Documents"))
		{
			enableDocument(GameObject.Find ("Missing Documents"));

		}

		GameObject.Find ("QuestLogSmall").GetComponent<questLogDisplay>().open();

	}
	
	public void Update() {


		//set lock to false so others can interact with this object
		//transform.GetComponent<DetectObjects>().photonView.RPC("setInteractLock",PhotonTargets.AllBuffered, false);
		
		//delete the useless script generated by dunilog

		


//		if( GameObject.Find("InventoryObj").GetComponent<inventory>().inventoryObject == null)
//		{
//			PhotonView photonView = onUsedObj.GetPhotonView();
//			
//			photonView.RPC("disableRenderer",PhotonTargets.AllBuffered);
//			photonView.RPC("disableCollider",PhotonTargets.AllBuffered);
//			photonView.RPC("disableRigidbody",PhotonTargets.AllBuffered);
//			
//			
//			moveToPlayerPosition(onUsedObj.name);
//			disableRender(onUsedObj.name);
//			disableCollider(onUsedObj.name);
//			disableRigidbody(onUsedObj.name);
//			enableInventory(onUsedObj);
//		}
//		Stop ();
		// Add your update code here. When the command is done, call Stop().

	}



	
	public void OnDestroy() {
		// Add your finalization code here. This is critical. If the sequence is cancelled and this
		// command is marked as "required", then only Start() and OnDestroy() will be called.

	}

	void enableDocument(GameObject obj){
		//

		Renderer[] rs = obj.GetComponentsInChildren<Renderer>();
		
		foreach(Renderer r in rs)
			r.enabled = true;
		
		obj.GetComponent<Collider>().enabled = true;

	}






	
}
 
 

/**/